/*
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

Find the minimum element.

You may assume no duplicate exists in the array.
*/
public class Solution {
  public int findMin(int[] num) {
      int start =0,end = num.length-1;
      int mid = (end-start)/2+start;
      while(start<end){
          mid = (end-start)/2+start;
          if(num[start]<=num[mid]){
              if(num[end]>=num[mid]){
                  end=mid;
              }
              else{
                  start=mid+1;
              }
          }
          else{
              end=mid;
              start=start+1;
          }
      }
      return num[start];
  }
}
