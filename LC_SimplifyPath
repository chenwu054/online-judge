/*
Given an absolute path for a file (Unix-style), simplify it.

For example,
path = "/home/", => "/home"
path = "/a/./b/../../c/", => "/c"
click to show corner cases.

Corner Cases:
Did you consider the case where path = "/../"?
In this case, you should return "/".
Another corner case is the path might contain multiple slashes '/' together, such as "/home//foo/".
In this case, you should ignore redundant slashes and return "/home/foo".
*/
public class Solution {
    public String simplifyPath(String path) {
        if(path==null||path.length()==0) return "/";
        Stack<String> k = new Stack<String>();
        String[] dirs = path.split("/");
        for(int i=0;i<dirs.length;i++){
            if(dirs[i].equals("..")){
                if(k.size()>0)
                    k.pop();
            }
            else if(!dirs[i].equals(".") && !dirs[i].equals(""))
                k.push(dirs[i]);
        }
        if(k.size()==0) return "/";
        Stack<String> rev = new Stack<String>();
        while(k.size()>0){
            rev.push(k.pop());
        }
        StringBuilder sb = new StringBuilder();
        while(rev.size()>0){
            sb.append('/').append(rev.pop());
        }
        return sb.toString();
        
    }
}
