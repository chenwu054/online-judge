

/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); 
      II
*/

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    char[] a = new char[4];
    int idx=0, left=0;
    public int read(char[] buf, int n) {
        int i = 0;
        while(i<n) {
            if(idx < left) {
                buf[i++] = a[idx++]; 
            } else{
                idx=0;
                left = read4(a);
                if(left == 0) {
                    break;
                }
            }
        }
        return i;
    }
}

/*
The API: int read4(char *buf) reads 4 characters at a time from a file.

The return value is the actual number of characters read. For example, it returns 3 if there is only 3 characters left in the file.

By using the read4 API, implement the function int read(char *buf, int n) that reads n characters from the file.

Note:
The read function will only be called once for each test case.
*/
/* The read4 API is defined in the parent class Reader4.
      int read4(char[] buf); */

public class Solution extends Reader4 {
    /**
     * @param buf Destination buffer
     * @param n   Maximum number of characters to read
     * @return    The number of characters read
     */
    char[] a = new char[4];
    public int read(char[] buf, int n) {
        int readcount = read4(a);
        int i =0;
        while(readcount > 0 && i < n) {
            int count = Math.min(readcount, n-i);
            System.arraycopy(a, 0, buf, i, count);
            i+=count;
            readcount = read4(a);
        }
        return i;
    }
}
