/*
  Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.
*/
public class Solution {
    public int search(int[] A, int target) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(A==null||A.length==0)
            return -1;
        int n=A.length;
        int start=0,end=n-1;
        int mid=0;
        while(start<=end){
            mid=start+(end-start)/2;
            if(A[mid]==target)
                return mid;
            else if(A[mid]<target){
                if(A[start]<=target&&A[start]>A[mid])
                    end=mid-1;
                else
                    start=mid+1;
            }
            else{
                if(A[end]>=target&&A[end]<A[mid])
                    start=mid+1;
                else
                    end=mid-1;
            }
        }
        
        return -1;
    }
}
