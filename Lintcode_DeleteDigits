/*
  Given string A representative a positive integer which has N digits, remove any k digits of the number, the remaining digits are arranged according to the original order to become a new positive integer. Make this new positive integers as small as possible.
N <= 240 and k <=N, 
Example
Given an integer A = 178542, k = 4

return a string "12"
*/
public class Solution {
    /**
     *@param A: A positive integer which has N digits, A is a string.
     *@param k: Remove k digits.
     *@return: A string
     */
    public String DeleteDigits(String A, int k) {
        // write your code here
        if(A==null || A.length()==0 || k==0) return A;
        StringBuilder one = new StringBuilder(A);
        StringBuilder next = new StringBuilder();
        StringBuilder temp = null;
        for(int i=0;i<k;i++){
            int j=0;
            while(j<one.length()-1 && one.charAt(j) <= one.charAt(j+1)){
                next.append(one.charAt(j));
                j++;
            }
            j++;
            while(j<one.length()){
                next.append(one.charAt(j));
                j++;
            }
            temp = one;
            one= next;
            next=temp;
            next.delete(0,next.length());
        }
        temp=one;
        one=next;
        next=temp;
        one.delete(0,next.length());
        int j=0;
        while(j<next.length() && next.charAt(j)=='0'){
            j++;
        }
        if(j == next.length()){
            return "0";
        }
        for(;j<next.length();j++){
            one.append(next.charAt(j));
        }
        return one.toString();
    }
}
