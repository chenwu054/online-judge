class Solution:
    """
    @param numbers: Give an array numbers of n integer
    @param target : An integer
    @return : return the sum of the three integers, the sum closest target.
    """
    def threeSumClosest(self, num, target):
        # write your code here
        if num==None or len(num)<3:
            return None
        num.sort()
        ret = num[0]+num[1]+num[2]
        for i in range(len(num)-2):
            j,k=i+1,len(num)-1
            while j<k:
                sum = num[i]+num[j]+num[k]
                if sum==target:
                    return target
                elif sum>target:
                    k-=1
                else:
                    j+=1
                ret=ret if abs(sum-target)>abs(ret-target) else sum
                
        return ret


/*
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
*/
public class Solution {
    public int threeSumClosest(int[] num, int target) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        int i=0,j=0,k=num.length-1;
        int sum = 0;
        int min = num[0]+num[1]+num[2];
        int minDiff=Math.abs(num[0]+num[1]+num[2]-target);
        Arrays.sort(num);
        while(i<num.length-2){
            j=i+1;
            k=num.length-1;
            while(j<k){
                sum=num[i]+num[j]+num[k];
                if(sum==target)
                    return target;
                if(Math.abs(sum-target)<minDiff){
                    minDiff=Math.abs(sum-target);
                    min=sum;    
                }
                if(sum>target){
                    k--;
                    while(k>j&&num[k+1]==num[k])
                        k--;
                }
                else{
                    j++;
                    while(k>j && num[j]==num[j-1])
                        j++;
                }
            }
            i++;
            while(i<num.length-2&&num[i]==num[i-1]){
                i++;
            }
        }
        return min;
    }
}
