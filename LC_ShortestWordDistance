/*
Given a list of words and two words word1 and word2, return the shortest distance between these two words in the list.

For example,
Assume that words = ["practice", "makes", "perfect", "coding", "makes"].

Given word1 = “coding”, word2 = “practice”, return 3.
Given word1 = "makes", word2 = "coding", return 1.

Note:
You may assume that word1 does not equal to word2, and word1 and word2 are both in the list.

*/
public class Solution {
    public int shortestDistance(String[] words, String word1, String word2) {
        int minLen = words.length;
        int index1 = -1, index2 = -1;
        for(int i=0; i<words.length; i++){
            if(word1.equals(words[i])) {
                index1 = i;
                minLen = index2 > 0 ? Math.min(minLen, index1 - index2) : minLen;
            }
            else if(word2.equals(words[i])) {
                index2 = i;
                minLen = index1 > 0 ? Math.min(minLen, index2 - index1) : minLen;
            }
        }
        return minLen;
    }
}
