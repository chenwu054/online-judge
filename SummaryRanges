Given a sorted integer array without duplicates, return the summary of its ranges.

Example 1:
Input: [0,1,2,4,5,7]
Output: ["0->2","4->5","7"]
Example 2:
Input: [0,2,3,4,6,8,9]
Output: ["0","2->4","6","8->9"]

class Solution:
    def format(self, start, end):
        if start == end:
            return str(start)
        return str(start)+"->"+str(end)
    
    def summaryRanges(self, nums):
        """
        :type nums: List[int]
        :rtype: List[str]
        """
        if len(nums)==0:
            return []
        if len(nums)==1:
            return [self.format(nums[0], nums[0])]
        s,e=0,1
        ranges=[]
        while e<len(nums):
            while e<len(nums) and nums[e-1]+1==nums[e]:
                e+=1
            ranges.append([nums[s],nums[e-1]])
            s,e=e,e+1
        if s<len(nums):
            ranges.append([nums[s], nums[s]])
        res=[]
        for r in ranges:
            res.append(self.format(r[0], r[1]))
        
        return res
        
        
