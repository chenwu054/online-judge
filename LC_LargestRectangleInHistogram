/*
  Given n non-negative integers representing the histogram's bar height where the width of each bar is 1, find the area of largest rectangle in the histogram.


Above is a histogram where width of each bar is 1, given height = [2,1,5,6,2,3].


The largest rectangle is shown in the shaded area, which has area = 10 unit.

For example,
Given height = [2,1,5,6,2,3],
return 10
*/
public class Solution {
    public int largestRectangleArea(int[] height) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(height==null||height.length==0)
            return 0;
        Stack<Integer> h = new Stack<Integer>();
        Stack<Integer> index=new Stack<Integer>();
        h.push(0);
        index.push(-1);
        int nextHeight=0,maxArea=0,area=0,lastHeight=0;
        for(int i=0;i<=height.length;i++){
            nextHeight=i<height.length?height[i]:0;
            while(nextHeight<h.peek()){
                lastHeight=h.pop();
                index.pop();
                area = (i-(index.peek()+1))*lastHeight;
                if(area>maxArea)
                    maxArea=area;
            }
            h.push(nextHeight);
            index.push(i);
        }
        return maxArea;
    }
}
