/*
Subarray sum II
Given an integer array, find a subarray where the sum of numbers is between two given interval. Your code should return the number of possible answer.
Have you met this question in a real interview?
Example

Given [1,2,3,4] and interval = [1,3], return 4. The possible answers are:

[0, 0]
[0, 1]
[1, 1]
[2, 2]


*/
public class Solution {
    /**
     * @param A an integer array
     * @param start an integer
     * @param end an integer
     * @return the number of possible answer
     */
    public int subarraySumII(int[] A, int start, int end) {
        // Write your code here
        if(A==null||A.length==0){
            return 0;
        }
        int n=A.length;
        int[] sum=new int[n];
        sum[0]=A[0];
        for(int i=1;i<n;i++){
            sum[i]=sum[i-1]+A[i];
        }
        int num=0;
        for(int i=0;i<n;i++){
            if(sum[i]>=start && sum[i]<=end)
                num++;
            for(int j=0;j<i;j++){
                if(sum[i]-sum[j]>=start && sum[i]-sum[j]<=end){
                    num++;
                }
            }
        }
        return num;
    }
    
}
