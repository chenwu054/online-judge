/*
You are playing the following Flip Game with your friend: Given a string that contains only these two characters: + and -, you and your friend take turns to flip two consecutive "++" into "--". The game ends when a person can no longer make a move and therefore the other person will be the winner.

Write a function to determine if the starting player can guarantee a win.

For example, given s = "++++", return true. The starting player can guarantee a win by flipping the middle "++" to become "+--+".

Follow up:
Derive your algorithm's runtime complexity.
*/
public class Solution {
    public boolean canWin(String s) {
        if(s==null|| s.length() < 2) {
            return false;
        }   
        int n = s.length();
        return win(s);
    }
    private boolean win(String s) {
        int i = find(s, 0);
        while(i>=0) {
            String ss = s.substring(0,i) + "--" + s.substring(i+2);
            if(!win(ss)) {
                return true;
            }
            i = find(s, i + 1);
        }
        return false;
    }
    private int find(String s, int i) {
        while(i<s.length() - 1) {
            if(s.substring(i,i+2).equals("++")) {
                return i;
            }
            i++;
        }
        return -1;
    }
}
