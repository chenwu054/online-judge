/*
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array A = [1,1,1,2,2,3],

Your function should return length = 5, and A is now [1,1,2,2,3].
*/
public class Solution {
    public int removeDuplicates(int[] A) {
        if(A==null) return 0;
        if(A.length<2) return A.length;
        int count = 0;
        int front = 0,back = 0,n=A.length;
        while(front<n){
            A[back]=A[front++];
            count++;
            if(front<n && A[front]==A[back]){
                A[++back]=A[front++];
                count++;
                while(front<n&&A[front]==A[front-1]){
                    front++;
                }
            }
            back++;
        }
        
        return count;
    }
}
