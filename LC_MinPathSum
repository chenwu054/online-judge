/*
  Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right which minimizes the sum of all numbers along its path.

Note: You can only move either down or right at any point in time.
*/
public class Solution {
    public int minPathSum(int[][] grid) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(grid==null||grid.length==0)
            return 0;
        int[] dp = new int[grid[0].length];
        dp[0]=grid[0][0];
        for(int i=1;i<grid[0].length;i++){
            dp[i]=dp[i-1]+grid[0][i];
        }
        for(int i=1;i<grid.length;i++){
            for(int j=0;j<grid[0].length;j++){
                if(j==0)
                    dp[j]+=grid[i][j];
                else
                    dp[j]=Math.min(dp[j-1],dp[j])+grid[i][j];
            }
        }
        return dp[grid[0].length-1];
    }
}
