public class Grid {
    public boolean dfs(char[][] grid, boolean[][] visited, String pattern,int i,int j, int start){
        if(start==pattern.length())
            return true;
        if(i<0||j<0||i>=grid.length||j>=grid[0].length)
            return false;
        if(pattern.charAt(start)!=grid[i][j]||visited[i][j])
            return false;
        visited[i][j]=true;
        if(dfs(grid,visited,pattern,i+1,j,start+1))
            return true;
        if(dfs(grid,visited,pattern,i,j+1,start+1))
            return true;
        if(dfs(grid,visited,pattern,i-1,j,start+1))
            return true;
        if(dfs(grid,visited,pattern,i,j-1,start+1))
            return true;
        visited[i][j]=false;
        return false;
    }
    public boolean exists(char[][] grid, String pattern) {
        if(grid==null|| grid.length==0)
            return pattern==null||pattern.length()==0;
        int n=grid.length,m=grid[0].length;
        boolean[][] visited = new boolean[n][m];
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(pattern.charAt(0)==grid[i][j]){
                    if(dfs(grid, visited,pattern,i,j,0))
                         return true;
                }
            }
        }
        return false;
    }
}
