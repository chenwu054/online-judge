/*
Given a non-empty binary search tree and a target value, find the value in the BST that is closest to the target.

Note:
Given target value is a floating point.
You are guaranteed to have only one unique value in the BST that is closest to the target.
Show Company Tags
Show Tags
Show Similar Problems

*/
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int closestValue(TreeNode root, double target) {
        if(root == null) {
            return 0;
        }
        TreeNode ret = root, node = root;
        while(node!=null) {
            if(Math.abs(ret.val - target) > Math.abs(node.val - target)) {
                ret = node;
            }
            if(node.val < target) {
                node = node.right;
            } else {
                node = node.left;
            }
        }
        return ret.val;
    }
}
