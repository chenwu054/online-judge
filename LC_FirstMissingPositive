/*
  Given an unsorted integer array, find the first missing positive integer.

For example,
Given [1,2,0] return 3,
and [3,4,-1,1] return 2.

Your algorithm should run in O(n) time and uses constant space.
*/
public class Solution {
    public void swap(int[] a,int i,int j){
        int temp = a[i];
        a[i]=a[j];
        a[j]=temp;
    }
    public int firstMissingPositive(int[] a) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(a==null)
            return 1;
        int i=0;
        while(i<a.length){
            int j=i;
            while(a[j]!=j+1&& a[j]>0 && a[j]<=a.length && a[a[j]-1]!=a[j])
                swap(a,j,a[j]-1);
            i++;
        }
        for(i=0;i<a.length;i++){
            if(a[i]!=i+1)
                return i+1;
        }
        return a.length+1;
    }
}
