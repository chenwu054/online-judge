/*
  Given an unsorted array of integers, find the length of the longest consecutive elements sequence.

For example,
Given [100, 4, 200, 1, 3, 2],
The longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.

Your algorithm should run in O(n) complexity.
*/
public class Solution {
    public int longestConsecutive(int[] num) {
        // IMPORTANT: Please reset any member data you declared, as
        // the same Solution instance will be reused for each test case.
        if(num==null||num.length==0)
            return 0;
        Set<Integer> set = new HashSet<Integer>();
        for(int i=0;i<num.length;i++)
            set.add(num[i]);
        int maxLen=0,len=0;
        for(int i=0;i<num.length;i++){
            if(set.contains(num[i])){
                set.remove(cur);
                Integer cur= num[i];
                Integer n=cur+1;
                len=1;
                while(set.contains(n)){
                    set.remove(n++);
                    len++;
                }
                n=cur-1;
                while(set.contains(n)){
                    set.remove(n--);
                    len++;
                }
                if(len>maxLen)
                    maxLen=len;
            }
        }
        return maxLen;
    }
}
