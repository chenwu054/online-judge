/*
Given two strings s and t, determine if they are isomorphic.

Two strings are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character but a character may map to itself.

For example,
Given "egg", "add", return true.

Given "foo", "bar", return false.

Given "paper", "title", return true.
*/
public class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s==null&&t==null) return true;
        if(s==null||t==null) return false;
        if(s.length() != t.length()) return false;
        Map<Character,Character> map = new HashMap<Character,Character>();
        Map<Character,Character> reverse = new HashMap<Character,Character>();
        for(int i=0;i<s.length();i++){
            char c = s.charAt(i);
            char d = t.charAt(i);
            if(!map.containsKey(c) && !reverse.containsKey(d)){
                map.put(c,d);
                reverse.put(d,c);
            }
            else if(map.containsKey(c) && reverse.containsKey(d)){
                if(d!=map.get(c) || c!=reverse.get(d)){
                    return false;
                }
            }
            else{
                return false;
            }
        }
        return true;
    }
}
