/*
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.
*/
public class Solution {
    public void moveZeroes(int[] nums) {
        if(nums == null || nums.length==0) {
            return;
        }
        int n = nums.length;
        int i = 0, j= 0 ;
        while(i<n) {
            while(i<n && nums[i]==0) {
                i++;
            }
            if(i<n) {
                swap(nums, i, j++);
            }
            i++;
        }
    }
    public void swap(int[] a, int i, int j) {
        int t = a[i];
        a[i] = a[j];
        a[j] = t;
    }
}
