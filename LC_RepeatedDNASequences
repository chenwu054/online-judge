/*
  All DNA is composed of a series of nucleotides abbreviated as A, C, G, and T, for example: "ACGAATTCCG". When studying DNA, it is sometimes useful to identify repeated sequences within the DNA.

Write a function to find all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule.

For example,

Given s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT",

Return:
["AAAAACCCCC", "CCCCCAAAAA"]
*/
public class Solution {
    public List<String> findRepeatedDnaSequences(String s) {
        List<String> ret = new ArrayList<String>();
        if(s==null || s.length()<10) return ret;
        Integer test = 0;
        for(int i=0;i<10;i++){
            test = test <<2;
            switch(s.charAt(i)){
                case 'A': test |= 0;
                    break;
                case 'C': test |= 1;
                    break;
                case 'G': test |= 2;
                    break;
                case 'T': test |= 3;
                    break;
            }
        }
        Set<Integer> set = new HashSet<Integer>();
        set.add(test);
        Set<String> toAdd = new HashSet<String>();
        for(int i=10;i<s.length();i++){
            test =test<<2;
            switch(s.charAt(i)){
                case 'A': test |= 0;
                    break;
                case 'C': test |= 1;
                    break;
                case 'G': test |= 2;
                    break;
                case 'T': test |= 3;
                    break;
            }
            test &= 0xfffff;
            if(set.contains(test)){
                toAdd.add(s.substring(i-9,i+1));
            }
            set.add(test);
        }
        for(String a : toAdd){
            ret.add(a);
        }
        return ret;
    }
}
