/*
  Given a binary tree, find its maximum depth.

The maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.
*/
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int maxDepth(TreeNode root) {
        if(root==null) return 0;
        Queue<TreeNode> q = new LinkedList<TreeNode>();
        Queue<TreeNode> next =new LinkedList<TreeNode>();
        Queue<TreeNode> temp=null;
        int level = 0;
        q.offer(root);
        while(q.size()>0){
            while(q.size()>0){
                TreeNode cur = q.poll();
                if(cur.left!=null) next.offer(cur.left);
                if(cur.right!=null) next.offer(cur.right);
            }
            temp = q;
            q=next;
            next=temp;
            level++;
        }
        return level;
    }
}
